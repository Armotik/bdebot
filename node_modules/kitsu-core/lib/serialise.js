"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("./error.js");function r(t,r,e,i,n){return i.relationships||(i.relationships={}),t.type||(t.type=r),i.relationships[e]={data:Object.assign(t)},i}function e(t,r,e,i,n){return i.relationships||(i.relationships={}),i.relationships[e]={data:t.map(({id:t,type:e})=>({id:t,type:e||r}))},i}function i(t,r,e){return e.attributes||(e.attributes={}),e.attributes[r]=t,e}function n(t){return Object.prototype.hasOwnProperty.call(t,"id")}exports.serialise=function(s,a={},o="POST"){try{if(null===a||Array.isArray(a)&&0===a.length)return{data:a};const t=this.plural?this.plural(this.camel(s)):this.camel(s);let c={type:t};!function(t,r,e){if(t.constructor!==Object||0===Object.keys(t).length)throw new Error("".concat(r," requires a JSON object body"));if("POST"!==r&&!t.id)throw new Error("".concat(r," requires an ID for the ").concat(e," type"))}(a,o,t),a.id&&(c.id=String(a.id));for(const t in a){const s=a[t],o=this.plural?this.plural(this.camel(t)):this.camel(t);null!==s&&s.constructor===Object&&n(s)?c=r(s,o,t,c):null!==s&&Array.isArray(s)&&s.length>0&&n(s[0])?c=e(s,o,t,c):"id"!==t&&"type"!==t&&(c=i(s,t,c))}return{data:c}}catch(r){throw t.error(r)}};
